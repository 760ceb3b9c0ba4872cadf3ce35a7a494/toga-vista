name: CI
on:
  pull_request:
  push:
    branches:
      - main
  workflow_call:

env:
  min_python_version: "3.7"

defaults:
  run:
    shell: bash  # PowerShell doesn't stop after failed commands.

jobs:
  beefore:
    name: Pre-test checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task:
        - flake8
        # - towncrier-check
        - docs
        - package
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v3.1.2
      with:
        python-version: ${{ env.min_python_version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install tox
    - run: tox -e ${{ matrix.task }}
    - if: matrix.task == 'package'
      uses: actions/upload-artifact@v3
      with:
        name: packages
        path: "**/dist"
        if-no-files-found: error

  core:
    needs: beefore
    strategy:
      matrix:
        platform: ['macos', 'ubuntu', 'windows']
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11.0-alpha - 3.11.0"]
    runs-on: ${{ matrix.platform }}-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.1.2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install --upgrade tox
    - name: Get packages
      uses: actions/download-artifact@v3
      with:
        name: packages
        path: dist
    - name: Test
      env:
        TOGA_INSTALL_COMMAND: 'bash -c "pip install dist/toga_{core,dummy}*.whl"'
      run: |
        tox -e py
    - if: matrix.platform == 'ubuntu' && matrix.python-version == env.min_python_version
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: true

  windows:
    name: Winforms backend tests
    needs: core
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v3.1.2
      with:
        # Py3.9 is the first Python version for which
        # a wheel of pythonnet isn't available on PyPI.
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install pytest-tldr
        python -m pip install -e src/core
        python -m pip install -e src/dummy
        python -m pip install -e src/winforms
    - name: Test
      run: |
        cd src/winforms
        pytest
    - name: Core Test
      run: |
        cd src/core
        pytest

  macOS:
    name: macOS backend tests
    needs: core
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v3.1.2
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install pytest-tldr
        python -m pip install -e src/core
        python -m pip install -e src/dummy
        python -m pip install -e src/cocoa
    - name: Test
      run: |
        cd src/cocoa
        pytest

  iOS:
    name: iOS backend tests
    needs: core
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v3.1.2
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install pytest-tldr
        python -m pip install -e src/core
        python -m pip install -e src/dummy
        python -m pip install -e src/iOS
    - name: Test
      run: |
        cd src/iOS
        pytest

  gtk:
    name: GTK+ backend tests
    needs: core
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v3.1.2
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y python3-gi python3-gi-cairo gir1.2-gtk-3.0 python3-dev libgirepository1.0-dev libcairo2-dev pkg-config
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install pytest-tldr
        python -m pip install -e src/core
        python -m pip install -e src/dummy
        python -m pip install -e src/gtk
    - name: Test
      run: |
        cd src/gtk
        xvfb-run -a -s '-screen 0 2048x1536x24' pytest

  android:
    name: Android backend tests
    needs: core
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v3.1.2
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install pytest-tldr
        python -m pip install -e src/core
        python -m pip install -e src/dummy
        python -m pip install -e src/android
    - name: Test
      run: |
        cd src/android
        pytest

  web:
    name: Web backend tests
    needs: core
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v3.1.2
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install pytest-tldr
        python -m pip install -e src/core
        python -m pip install -e src/dummy
        python -m pip install -e src/web
    - name: Test
      run: |
        cd src/web
        pytest
