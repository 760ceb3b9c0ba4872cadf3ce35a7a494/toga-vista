name: CI
on:
  pull_request:
  push:
    branches:
      - main
  workflow_call:

env:
  min_python_version: "3.7"

defaults:
  run:
    shell: bash  # PowerShell doesn't stop after failed commands.

jobs:
  beefore:
    name: Pre-test checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task:
        - flake8
        # - towncrier-check
        - docs
        - package
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v3.1.2
      with:
        python-version: ${{ env.min_python_version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install tox
    - run: tox -e ${{ matrix.task }}
    - if: matrix.task == 'package'
      uses: actions/upload-artifact@v3
      with:
        name: packages
        path: "**/dist"
        if-no-files-found: error

  # FIXME
  # core:
  #   needs: beefore
  #   strategy:
  #     matrix:
  #       platform: ['macos', 'ubuntu', 'windows']
  #       python-version: ["3.7", "3.8", "3.9", "3.10", "3.11.0-alpha - 3.11.0"]
  #   runs-on: ${{ matrix.platform }}-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3.1.2
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install --upgrade setuptools
  #       python -m pip install --upgrade tox
  #   - name: Get packages
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: packages
  #   - name: Test
  #     env:
  #       TOGA_INSTALL_COMMAND: 'bash -c "pip install src/{core,dummy}/dist/*.whl"'
  #     run: |
  #       tox -e py
  #   - if: matrix.platform == 'ubuntu' && matrix.python-version == env.min_python_version
  #     uses: codecov/codecov-action@v1
  #     with:
  #       token: ${{ secrets.CODECOV_TOKEN }}
  #       file: ./coverage.xml
  #       flags: unittests
  #       fail_ci_if_error: true

  # backend:
  #   needs: beefore
  #   strategy:
  #     matrix:
  #       backend: [android, cocoa, gtk, iOS, web, winforms]
  #       include:
  #         - runs-on: ubuntu-latest
  #         - python-version: "3.7"  # Should be env.min_python_version (https://github.com/actions/runner/issues/480)
  #         - pre-command:
  #         - test-command: pytest
  #         - backend: cocoa
  #           runs-on: macos-latest
  #         - backend: gtk
  #           pre-command: "sudo apt-get update -y && sudo apt-get install -y python3-gi python3-gi-cairo gir1.2-gtk-3.0 python3-dev libgirepository1.0-dev libcairo2-dev pkg-config"
  #           test-command: "xvfb-run -a -s '-screen 0 2048x1536x24' pytest"
  #         - backend: iOS
  #           runs-on: macos-latest
  #         - backend: winforms
  #           runs-on: windows-latest
  #           # Py3.9 is the first Python version for which
  #           # a wheel of pythonnet isn't available on PyPI.
  #           python-version: "3.9"
  #   runs-on: ${{ matrix.runs-on }}
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3.1.2
  #     with:
  #       # Py3.9 is the first Python version for which
  #       # a wheel of pythonnet isn't available on PyPI.
  #       python-version: ${{ matrix.python-version }}
  #   - name: Get packages
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: packages
  #   - name: Install dependencies
  #     run: |
  #       ${{ matrix.pre-command }}
  #       python -m pip install --upgrade pip
  #       python -m pip install --upgrade setuptools
  #       python -m pip install pytest-tldr
  #       python -m pip install src/{core,dummy,${{ matrix.backend }}}/dist/*.whl
  #   - name: Test
  #     run: |
  #       cd src/${{ matrix.backend }}
  #       ${{ matrix.test-command }}
