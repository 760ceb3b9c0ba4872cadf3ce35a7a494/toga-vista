# The leading comma generates the "py-..." environments.
[testenv:py{,37,38,39,310,311,312}-{android,cocoa,core,gtk,iOS,web,winforms}]
skip_install = True
setenv =
    android: subdir = android
    cocoa: subdir = cocoa
    core: subdir = core
    gtk: subdir = gtk
    iOS: subdir = iOS
    web: subdir = web
    winforms: subdir = winforms

    core: TOGA_BACKEND = toga_dummy
    !core: TOGA_BACKEND = toga_{env:subdir}
    gtk: test_command_prefix = xvfb-run -a -s "-screen 0 2048x1536x24"
changedir = {env:subdir}
allowlist_externals =
    bash
    gtk: xvfb-run
commands =
    # TOGA_INSTALL_COMMAND is set to a bash command by the CI workflow.
    {env:TOGA_INSTALL_COMMAND:python -m pip install . ../core[dev] ../dummy}
    {env:test_command_prefix:} coverage run -m pytest -vv
    coverage combine
    coverage report --rcfile ../pyproject.toml

[testenv:towncrier-check]
skip_install = True
deps =
    {[testenv:towncrier]deps}
commands =
    python -m towncrier.check --compare-with origin/main

[testenv:towncrier]
skip_install = True
deps =
    towncrier ~= 22.8
    ./core
commands =
    towncrier {posargs}

[docs]
change_dir = docs
build_dir = _build
deps =
    ./core[docs]
# -W: make warnings into errors
# --keep-going: continue on errors
sphinx_args = -W --keep-going
# -v: verbose logging
# -E: force rebuild of environment
# -T: print traceback on error
# -a: read/parse all files
# -d: use tox's temp dir for caching
sphinx_args_extra = {[docs]sphinx_args} -v -E -T -a -d {envtmpdir}/doctrees

[testenv:docs]
skip_install = True
change_dir = {[docs]change_dir}
deps = {[docs]deps}
commands =
    python -m sphinx {[docs]sphinx_args} -b html . {[docs]build_dir}/html

[testenv:docs-lint]
skip_install = True
change_dir = {[docs]change_dir}
deps = {[docs]deps}
commands =
    python -m sphinx {[docs]sphinx_args_extra} -b linkcheck . {[docs]build_dir}/links
    python -m sphinx {[docs]sphinx_args_extra} -b spelling . {[docs]build_dir}/spell

[testenv:docs-all]
skip_install = True
change_dir = {[docs]change_dir}
deps = {[docs]deps}
commands =
    python -m sphinx {[docs]sphinx_args_extra} -b html . {[docs]build_dir}/html


[testenv:package]
skip_install = True
deps =
    check_manifest==0.48
    build==0.9.0
    twine==4.0.2
commands =
    check-manifest -v {posargs}
    python -m build {posargs}
    python -m twine check {posargs}/dist/*
