WebView
=======

An embedded web browser.

.. figure:: /reference/images/WebView.jpeg
    :align: center

.. rst-class:: widget-support
.. csv-filter:: Availability (:ref:`Key <api-status-key>`)
   :header-rows: 1
   :file: ../../data/widgets_by_platform.csv
   :included_cols: 4,5,6,7,8,9
   :exclude: {0: '(?!^(WebView|Component)$)'}

Usage
-----

.. code-block:: python

    import toga

    webview = toga.WebView()

    # Request a URL be loaded in the webview.
    webview.url = "https://beeware.org"

    # Load a URL, and wait (non-blocking) for the page to complete loading
    await webview.load_url("https://beeware.org")

    # Load static HTML content into the wevbiew.
    webview.set_content("https://example.com", "<html>...</html>")

Notes
-----

* Rendering web content is a complex, multi-threaded process. Although a page
  may have completed *loading*, there's no guarantee that the page has been
  fully *rendered*, or that the widget representation has been fully updated.
  The number of load events generated by a URL transition or content change can
  be unpredictable. An ``on_webview_load`` event should be interpreted as an
  indication that some change has occured, not that a *specific* change has
  occured, or that a specific change has been fully propegated into the rendered
  content.

* Using WebView on Windows 10 requires that your users have installed the `Edge
  WebView2 Evergreen Runtime
  <https://developer.microsoft.com/en-us/microsoft-edge/webview2/#download-section>`__.
  This is installed by default on Windows 11.

* Using WebView on Linux requires that the user has installed the system packages
  for WebKit2, plus the GObject Introspection bindings for WebKit2.

* Due to app security restrictions, it is not possible to display URLs with a
  ``file://`` URL. To serve local file content, run a web server on
  ``localhost`` using a background thread, and set the WebView's URL

* On macOS, the "inspect element" feature is not enabled by default. WebView
  debugging is only available when your code is packaged as a full macOS app
  (e.g., with Briefcase). To enable debugging, run:

    .. code-block:: console

        $ defaults write com.example.appname WebKitDeveloperExtras -bool true

    Substituting ``com.example.appname`` with the bundle ID for your packaged
    app.

Reference
---------

.. autoclass:: toga.widgets.webview.WebView
   :members:
   :undoc-members:
